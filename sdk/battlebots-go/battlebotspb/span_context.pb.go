// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: span_context.proto

package battlebotspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpanContext struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_TraceId     []byte                 `protobuf:"bytes,1,opt,name=trace_id,json=traceId"`
	xxx_hidden_SpanId      []byte                 `protobuf:"bytes,2,opt,name=span_id,json=spanId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SpanContext) Reset() {
	*x = SpanContext{}
	mi := &file_span_context_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpanContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanContext) ProtoMessage() {}

func (x *SpanContext) ProtoReflect() protoreflect.Message {
	mi := &file_span_context_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SpanContext) GetTraceId() []byte {
	if x != nil {
		return x.xxx_hidden_TraceId
	}
	return nil
}

func (x *SpanContext) GetSpanId() []byte {
	if x != nil {
		return x.xxx_hidden_SpanId
	}
	return nil
}

func (x *SpanContext) SetTraceId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_TraceId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SpanContext) SetSpanId(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_SpanId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *SpanContext) HasTraceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SpanContext) HasSpanId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SpanContext) ClearTraceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_TraceId = nil
}

func (x *SpanContext) ClearSpanId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_SpanId = nil
}

type SpanContext_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	TraceId []byte
	SpanId  []byte
}

func (b0 SpanContext_builder) Build() *SpanContext {
	m0 := &SpanContext{}
	b, x := &b0, m0
	_, _ = b, x
	if b.TraceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_TraceId = b.TraceId
	}
	if b.SpanId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_SpanId = b.SpanId
	}
	return m0
}

var File_span_context_proto protoreflect.FileDescriptor

const file_span_context_proto_rawDesc = "" +
	"\n" +
	"\x12span_context.proto\x12\x13battlebots.protobuf\"A\n" +
	"\vSpanContext\x12\x19\n" +
	"\btrace_id\x18\x01 \x01(\fR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x02 \x01(\fR\x06spanIdB=Z;github.com/z5labs/battlebots/pkgs/battlebotspb;battlebotspbb\beditionsp\xe8\a"

var file_span_context_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_span_context_proto_goTypes = []any{
	(*SpanContext)(nil), // 0: battlebots.protobuf.SpanContext
}
var file_span_context_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_span_context_proto_init() }
func file_span_context_proto_init() {
	if File_span_context_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_span_context_proto_rawDesc), len(file_span_context_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_span_context_proto_goTypes,
		DependencyIndexes: file_span_context_proto_depIdxs,
		MessageInfos:      file_span_context_proto_msgTypes,
	}.Build()
	File_span_context_proto = out.File
	file_span_context_proto_goTypes = nil
	file_span_context_proto_depIdxs = nil
}
